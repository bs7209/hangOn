<?xml version="1.0" encoding="euc-kr"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"	   
	xmlns:tx="http://www.springframework.org/schema/tx"	   
	xmlns:mybatis-spring="http://www.springframework.org/schema/mybatis-spring"	    	    
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
					    http://www.springframework.org/schema/beans/spring-beans.xsd
					    http://www.springframework.org/schema/aop
					    http://www.springframework.org/schema/aop/spring-aop.xsd
					    http://www.springframework.org/schema/jdbc
					    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd 
					    http://www.springframework.org/schema/tx
					    http://www.springframework.org/schema/tx/spring-tx.xsd       
					    http://www.springframework.org/schema/mybatis-spring
					    http://www.springframework.org/schema/mybatis-spring-1.3.2.xsd    
					    http://www.springframework.org/schema/context
					    http://www.springframework.org/schema/context/spring-context.xsd">
    
    <!-- bean 객체 자동 등록 및 주입 -->
<!-- 	<context:component-scan base-package="kr.co.hangOn" /> -->

	<!-- DriverManager 사용
	<bean id="dataSource" 
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
      	  p:driverClassName="${jdbc.oracle.driver}"
          p:url="${jdbc.oracle.url}"
          p:username="${jdbc.oracle.username}" 
          p:password="${jdbc.oracle.password}" />
	-->

	<!-- DBCP 사용  -->	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
      	p:driverClassName="com.mysql.cj.jdbc.Driver"
        p:url="jdbc:mysql://hangon.cl2otyezrmgx.ap-northeast-2.rds.amazonaws.com:3306/hangon?useUnicode=true&amp;characterEncoding=utf8"    
        p:username="??" 
        p:password="??" />
        
    <!-- 이메일 관련 -->
	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	    <property name="host" value="smtp.gmail.com" />
	    <property name="port" value="587" />
	    <property name="username" value="??" />
	    <property name="password" value="??" />
	    <property name="javaMailProperties">
	        <props>
	            <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
	            <prop key="mail.smtp.starttls.enable">true</prop>
	            <prop key="mail.smtp.auth">true</prop>
	        </props>
	    </property>
	</bean>
	<bean id="mailService" class="kr.co.hangOn.mail.service.MailServiceImpl">
	    <property name="javaMailSender" ref="javaMailSender" />
	</bean>
	
	<!-- sqlConfig.xml 내부 설정을 하나의 bean 객체로 처리 -  VO 객체 alias 지정, mappers -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="kr.co.hangOn.repository.domain" />			
		<property name="mapperLocations" value="classpath:config/sqlmap/mysql/*.xml" />
		<property name="configLocation" value="classpath:config/mybatis/sqlMapConfig.xml" />		
	</bean>
	
	<!-- mapper interface의 구현체를 bean으로 자동 등록 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="kr.co.hangOn.repository.mapper" />
	</bean>
	
	<!-- ConnectionPool 처리를 위한 트랜잭션 설정 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
</beans>